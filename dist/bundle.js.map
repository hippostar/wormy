{"version":3,"sources":["webpack:///webpack/bootstrap d1778c1ce4c08d1c6d24","webpack:///./src/game.ts","webpack:///./src/main.ts","webpack:///./src/map.ts","webpack:///./src/worm.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d1778c1ce4c08d1c6d24","\r\nimport Map from './map';\r\nimport Worm, { Direction } from './worm';\r\n\r\n// size\r\nconst WIDTH = 800; \r\nconst HEIGHT = 400;\r\nconst SCALE = 2;\r\n\r\n// movement speed\r\nconst INITIAL_SPEED = 50;\r\nconst SPEED_CHANGE = 4;\r\nconst MINIMUM_SPEED = 15;\r\n\r\n// levels\r\nconst MAX_LEVEL = 10;\r\n\r\n// level background colors\r\nexport const COLORS = [\r\n  '#fafafa',\r\n  '#ffffcc',\r\n  '#ffe6ee',\r\n  '#e6f2ff',\r\n  '#e6ffe6',\r\n  '#fff0e6',\r\n  '#e6e6ff',\r\n  '#f9f2ec',\r\n  '#e6ffe6',\r\n  '#ff4d4d',\r\n];\r\n\r\nexport default class Game {\r\n\r\n    private canvas: HTMLCanvasElement;\r\n\r\n    private level:number = 0;\r\n    private score:number = 0;\r\n    private speed:number = INITIAL_SPEED;\r\n    private turbo:boolean = false;\r\n    private running: boolean = false;\r\n\r\n    private map: Map;\r\n    private worm: Worm;\r\n    private nextMove:number;\r\n    private width:number;\r\n    private height:number;\r\n\r\n    private touch:Touch;\r\n\r\n    constructor() {\r\n\r\n        this.canvas = document.createElement('Canvas') as HTMLCanvasElement;\r\n        document.body.appendChild(this.canvas);\r\n\r\n        // canvas element size in the page\r\n        //this.canvas.style.width = WIDTH + 'px';\r\n        //this.canvas.style.height = HEIGHT + 'px';\r\n\r\n        // image buffer size \r\n        this.canvas.width = WIDTH * SCALE;\r\n        this.canvas.height = HEIGHT * SCALE;\r\n\r\n        // save size\r\n        this.width = this.canvas.width;\r\n        this.height=  this.canvas.height;\r\n\r\n        this.worm = new Worm(this);\r\n        this.map = new Map(this);\r\n      \r\n        // event listeners\r\n        window.addEventListener('keydown', this.onKeyDown.bind(this), false);\r\n        window.addEventListener('keyup', this.onKeyUp.bind(this), false);\r\n        this.canvas.addEventListener('touchstart', this.onTouchStart.bind(this), false);\r\n        this.canvas.addEventListener('touchmove', this.onTouchMove.bind(this), false);\r\n        this.canvas.addEventListener('touchend', this.onTouchEnd.bind(this), false);\r\n    }\r\n\r\n    start() {\r\n        this.nextMove = 0;\r\n        this.running = true;\r\n        requestAnimationFrame(this.loop.bind(this));\r\n    }\r\n\r\n    stop() {\r\n        this.running = false;\r\n    }\r\n\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n\r\n    getLevel() {\r\n        return this.level;\r\n    }\r\n\r\n    loop(time:number) {\r\n\r\n        if(this.running) {\r\n          \r\n          requestAnimationFrame(this.loop.bind(this));\r\n          \r\n          if (this.turbo || time >= this.nextMove) {\r\n            \r\n              this.nextMove = time + this.speed;\r\n            \r\n              // move once\r\n              this.worm.move();\r\n                          \r\n              // check what happened  \r\n              this.checkState();\r\n                 \r\n              // repaint\r\n              this.paint(time);\r\n          }\r\n        }\r\n    }\r\n\r\n    paint(time:number) {\r\n      \r\n        const {width, height, level} = this;\r\n        const color = COLORS[level];\r\n        const context = this.canvas.getContext(\"2d\");\r\n      \r\n        // global settings\r\n        context.lineWidth = 1 * SCALE;\r\n        context.lineJoin = 'round';\r\n        context.lineCap = 'round';\r\n      \r\n        // background\r\n        context.fillStyle = color;\r\n        context.fillRect(0,0,width,height);\r\n      \r\n        // level\r\n        context.font = height+'px Arial';\r\n        context.textBaseline = 'middle';\r\n        context.textAlign = 'center';\r\n        context.fillStyle = 'rgba(0,0,0,0.1)';\r\n        context.fillText(level+1+'', width/2, height/2);\r\n      \r\n        // score\r\n        context.font = 20 * SCALE + 'px Arial';\r\n        context.textAlign = 'left';\r\n        context.textBaseline = 'top';\r\n        context.fillStyle = 'rgba(0,0,0,0.25)';\r\n        context.fillText(this.score+'', 10*SCALE, 10*SCALE);\r\n\r\n        // map items\r\n        this.map.draw(time, context);\r\n        \r\n        // worm\r\n        this.worm.draw(time, context);\r\n    }\r\n\r\n    checkState() {\r\n\r\n        const head = this.worm.getHead();\r\n\r\n        // left the play area or ate itself?\r\n        if (this.isOutside(head) || this.worm.isWorm(head)) {\r\n            // dead\r\n            this.die();\r\n            return;\r\n        } \r\n\r\n        // got items?\r\n        const items = this.map.getItemsAt(head);\r\n        if(items != undefined && items.length > 0) {\r\n            \r\n            this.score += items.length * 100;\r\n            \r\n            // apply item effects\r\n            items.forEach((item) => {\r\n                switch(item.type) {\r\n                    case 'GROW':\r\n                    this.worm.grow();\r\n                    break;\r\n                    case 'SHRINK':\r\n                    this.worm.shrink();\r\n                    break;\r\n                    case 'SPEED':\r\n                    this.speedUp();\r\n                    break;\r\n                    case 'SLOW':\r\n                    this.slowDown();\r\n                    break;\r\n                }\r\n                \r\n            });\r\n            \r\n            this.map.removeItems(items);\r\n            // all gone?\r\n            if(!this.map.hasItems()) {\r\n                this.levelUp();\r\n            }\r\n        }\r\n    }\r\n  \r\n    levelUp() {\r\n      this.score += 1000;\r\n      this.level++;\r\n      if(this.level < MAX_LEVEL) {\r\n        this.speedUp();\r\n        this.map.seed();\r\n      } else {\r\n        this.win();\r\n      }\r\n    }\r\n  \r\n    win() {\r\n      alert(\"Congrats you beat the game!\\r\\nFinal Score: \" + this.score);\r\n      this.stop();       \r\n    }\r\n  \r\n    die() {\r\n      alert(\"You died.\\r\\nFinal Score: \" + this.score);\r\n      this.stop();\r\n    }\r\n\r\n    speedUp() {\r\n        this.speed = Math.max(MINIMUM_SPEED, this.speed - SPEED_CHANGE);\r\n    }\r\n\r\n    slowDown() {\r\n        this.speed = Math.min(INITIAL_SPEED, this.speed + SPEED_CHANGE);\r\n    }\r\n\r\n    isOutside(position:{x:number, y:number}) {\r\n        return position.x < 0 || position.x >= this.width || position.y < 0 || position.y >= this.height;\r\n    }\r\n  \r\n   onKeyDown(event:KeyboardEvent) {\r\n       switch(event.key) {\r\n         case 'ArrowUp':\r\n           event.preventDefault();\r\n           this.worm.setDirection('Up');\r\n           break;\r\n         case 'ArrowDown':\r\n           event.preventDefault();\r\n           this.worm.setDirection('Down');\r\n           break;\r\n         case 'ArrowLeft':\r\n           event.preventDefault();\r\n           this.worm.setDirection('Left');\r\n           break;\r\n         case 'ArrowRight':\r\n           event.preventDefault();\r\n           this.worm.setDirection('Right');\r\n           break;\r\n         case ' ': // spacebar\r\n            event.preventDefault();\r\n           this.turbo=true;\r\n           break;\r\n       }\r\n    }\r\n\r\n    onKeyUp(event:KeyboardEvent) {\r\n        switch(event.key) {\r\n             case ' ': // spacebar\r\n                this.turbo=false;\r\n                break;\r\n       }\r\n    }\r\n  \r\n    onTouchStart(e:TouchEvent) {\r\n        this.touch = e.changedTouches[0];\r\n        e.preventDefault();\r\n    }\r\n  \r\n    onTouchMove(e:TouchEvent){\r\n        e.preventDefault();\r\n    }\r\n  \r\n    onTouchEnd(e:TouchEvent){\r\n      \r\n        const touch = e.changedTouches[0]\r\n        \r\n        const distX = touch.pageX - this.touch.pageX;\r\n        const distY = touch.pageY - this.touch.pageY;\r\n        \r\n        let direction = null;\r\n\r\n        if (Math.abs(distX) >= 100){ \r\n          direction = (distX < 0)? 'Left' : 'Right';\r\n        }\r\n        else if (Math.abs(distY) >= 100){\r\n          direction = (distY < 0)? 'Up' : 'Down';\r\n        }\r\n        \r\n        if(direction) {\r\n          this.worm.setDirection(direction as Direction);\r\n        }\r\n        \r\n        e.preventDefault()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/game.ts","import Game from './game';\r\n\r\nwindow.focus();\r\n\r\nlet game = new Game();\r\ngame.start();\r\n\r\n// global var\r\n(window as any).game = game;\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import Game from './game';\r\n\r\nconst COLORS = {\r\n    GROW:'blue',\r\n    SHRINK:'black',\r\n    SPEED:'green',\r\n    SLOW:'red'\r\n};\r\n\r\ntype ItemType = 'GROW'|'SHRINK'|'SPEED'|'SLOW';\r\n\r\nexport class Item {\r\n    \r\n    x:number;\r\n    y:number;\r\n    type:ItemType;\r\n\r\n    constructor(x:number, y:number, type:ItemType) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.type = type;\r\n    }\r\n\r\n    compare(other:Item) {\r\n        return this.x == other.x && this.y == other.y;\r\n    }\r\n}\r\n\r\nconst ITEMS_PER_LEVEL = 5;\r\nconst ITEMS_SIZE = 10;\r\n\r\nexport default class Map {\r\n\r\n    private game: Game;\r\n    private items: Item[];\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n        this.items = [];     \r\n        this.seed(); \r\n    }\r\n  \r\n    seed() {\r\n    \r\n        const width= this.game.getWidth();\r\n        const height = this.game.getHeight();\r\n       \r\n       const nbItems = ITEMS_PER_LEVEL * (this.game.getLevel() + 1) ;\r\n       const widthWithPadding = width - 2 * ITEMS_SIZE;\r\n       const heightWidthPadding = height - 2 * ITEMS_SIZE;\r\n\r\n       for (let count = 0;  count < nbItems; count++) {\r\n\r\n            // item position\r\n            const x = ITEMS_SIZE + Math.floor(Math.random() * widthWithPadding);\r\n            const y = ITEMS_SIZE + Math.floor(Math.random() * heightWidthPadding); \r\n\r\n            // item type            \r\n            const roll = Math.random() * 100;\r\n            const type:ItemType = roll < 70 ? 'GROW' : (roll < 80 ? 'SHRINK' : (roll < 95 ? 'SPEED' : 'SLOW'));\r\n\r\n            this.items.push(new Item(x, y, type));\r\n        }\r\n    }\r\n\r\n    draw(time:number, context:CanvasRenderingContext2D) {\r\n        context.fillStyle = 'red';\r\n        const betterItemSize = ITEMS_SIZE * 2/3;\r\n        this.items.forEach((item) => {\r\n            context.fillStyle = COLORS[item.type];\r\n            context.fillRect(item.x - betterItemSize, item.y - betterItemSize, betterItemSize * 2, betterItemSize * 2)\r\n        });\r\n    }\r\n\r\n    getItemsAt(point:{x:number,y:number}) {\r\n        return this.items.filter(item => \r\n            point.x >= item.x - ITEMS_SIZE && \r\n            point.y >= item.y - ITEMS_SIZE && \r\n            point.x <= item.x + ITEMS_SIZE && \r\n            point.y <= item.y + ITEMS_SIZE\r\n        );\r\n    }\r\n  \r\n    removeItems(items:Item[]) {\r\n        this.items = this.items.filter(item => !items.find(toRemove=> toRemove.compare(item)))\r\n    }\r\n  \r\n    hasItems() {\r\n      return this.items.length > 0;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/map.ts","import Game from './game';\r\n\r\nconst INITIAL_LENGTH = 300;\r\nconst INITIAL_DIRECTION = 'Right';\r\nconst INITIAL_POSITION = { x: 50, y: 50 };\r\n\r\nconst SIZE = 7;\r\nconst MOVEMENT = 5;\r\n\r\nexport type Direction = 'Up' | 'Right' | 'Left' | 'Down';\r\n\r\nexport class Point {\r\n\r\n    x:number;\r\n    y:number;\r\n    direction:Direction;\r\n\r\n    constructor(x:number, y:number, direction:Direction) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.direction = direction;\r\n    }\r\n\r\n    compare(other:Point) {\r\n        return this.x == other.x && this.y == other.y;\r\n    }\r\n}\r\n\r\nexport default class Worm {\r\n\r\n    private head: Point;\r\n    private tail: Point[];\r\n    private direction: Direction;\r\n    private size: number;\r\n    private game: Game;\r\n\r\n    constructor(game:Game) {\r\n        this.game = game;\r\n       \r\n        this.size = INITIAL_LENGTH;\r\n        this.direction = INITIAL_DIRECTION;\r\n        \r\n        // initial head\r\n        this.head = new Point(INITIAL_POSITION.x, INITIAL_POSITION.y, INITIAL_DIRECTION);\r\n      \r\n        // initial tail\r\n        this.tail = [new Point(INITIAL_POSITION.x, INITIAL_POSITION.y, INITIAL_DIRECTION)];\r\n    }\r\n  \r\n    setDirection(direction:Direction) {\r\n\r\n        if(this.direction == 'Up' && (direction == 'Down' || direction == 'Up')) {\r\n          return;\r\n        }\r\n\r\n        if(this.direction == 'Down' && (direction == 'Up' || direction == 'Down')) {\r\n          return;\r\n        }\r\n\r\n        if(this.direction == 'Left' && (direction == 'Right' || direction == 'Left')) {\r\n          return;\r\n        }\r\n\r\n        if(this.direction == 'Right' && (direction == 'Left' || direction == 'Right')) {\r\n          return;\r\n        }\r\n\r\n        this.direction = direction;\r\n    }\r\n\r\n    move() {\r\n\r\n        const direction = this.direction;\r\n\r\n        if(direction != this.head.direction) {\r\n            this.tail.push(this.head);\r\n        }\r\n      \r\n        // get next head position\r\n        this.head = this.getNext(direction);\r\n\r\n        // fix the worm size\r\n        if (this.getSize() > this.size) {\r\n            \r\n            const tailEnd = this.tail[0];\r\n            const nextPoint = this.tail.length > 1 ? this.tail[1] : this.head;\r\n\r\n            switch(nextPoint.direction) {\r\n                case 'Up':\r\n                    tailEnd.y -= MOVEMENT;\r\n                    break\r\n                case 'Down':\r\n                    tailEnd.y += MOVEMENT;\r\n                    break;\r\n                case 'Left':\r\n                    tailEnd.x -= MOVEMENT;\r\n                    break;\r\n                case 'Right':\r\n                    tailEnd.x += MOVEMENT;\r\n                    break;\r\n            }\r\n\r\n            // remove tail end if the tail end is now at the same location as next point\r\n            if(tailEnd.y == nextPoint.y && tailEnd.x == nextPoint.x) {\r\n                this.tail.splice(0, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    getSize() {\r\n        const points = [...this.tail, this.head];\r\n        let size = 0;\r\n        for(let i = 0; i < points.length - 1; i++) {\r\n            const p1 = points[i];\r\n            const p2 = points[i+1];\r\n            size += (Math.abs(p1.x - p2.x) + Math.abs(p1.y-p2.y));\r\n        }\r\n        return size;\r\n    }\r\n\r\n    getNext(direction:Direction) {\r\n        switch (direction) {\r\n            case 'Up':\r\n                return new Point(this.head.x, this.head.y - MOVEMENT,  direction);\r\n            case 'Right':\r\n                return new Point(this.head.x + MOVEMENT, this.head.y,  direction);\r\n            case 'Down':\r\n                return new Point(this.head.x, this.head.y + MOVEMENT,  direction);\r\n            case 'Left':\r\n                return new Point(this.head.x - MOVEMENT, this.head.y,  direction);\r\n        }\r\n    }\r\n\r\n    draw(time: number, context:CanvasRenderingContext2D) {\r\n        \r\n        const {x,y} = this.head;\r\n        const offset = SIZE*2/3;\r\n\r\n        // tail\r\n        context.strokeStyle=\"#333333\";\r\n        context.lineWidth = SIZE * 2;\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        for(let i = this.tail.length-1; i >= 0; i--) {\r\n            const point = this.tail[i];\r\n            context.lineTo(point.x, point.y);\r\n        }\r\n        context.stroke();\r\n\r\n        // head\r\n        context.fillStyle=\"#111111\";\r\n        context.beginPath();\r\n        context.arc(x, y, SIZE+0.5, 0, 2 * Math.PI, false);\r\n        context.fill();\r\n\r\n        // eyes\r\n        switch(this.direction[0]) {\r\n          case 'Up':\r\n             context.beginPath();\r\n             context.arc(x + offset, y + offset, SIZE/4, 0, 2 * Math.PI, false);\r\n             context.arc(x + 2 * offset, y + offset, SIZE, 0, 2 * Math.PI, false);\r\n             context.fillStyle = 'white';\r\n             context.fill();\r\n            break;\r\n            case 'Down':\r\n             context.beginPath();\r\n             context.arc(x + offset, y + 2*offset, SIZE/4, 0, 2 * Math.PI, false);\r\n             context.arc(x + 2 * offset, y + 2*offset, SIZE/4, 0, 2 * Math.PI, false);\r\n             context.fillStyle = 'white';\r\n             context.fill();\r\n            break;\r\n            case 'Right':\r\n             context.beginPath();\r\n             context.arc(x + 2 * offset, y + offset, SIZE/4, 0, 2 * Math.PI, false);\r\n             context.arc(x + 2 * offset, y + 2 * offset, SIZE/4, 0, 2 * Math.PI, false);\r\n             context.fillStyle = 'white';\r\n             context.fill();\r\n            break;\r\n            case 'Left':\r\n             context.beginPath();\r\n             context.arc(x + offset, y + offset, SIZE/4, 0, 2 * Math.PI, false);\r\n             context.arc(x + offset, y + 2 * offset, SIZE/4, 0, 2 * Math.PI, false);\r\n             context.fillStyle = 'white';\r\n             context.fill();\r\n            break;\r\n        }\r\n    }\r\n\r\n    grow(qty:number = 3) {\r\n        this.size += qty * SIZE * 3;\r\n    }\r\n\r\n    shrink(qty:number = 3) {\r\n        this.size -= qty * SIZE * 3;\r\n    }\r\n\r\n    getHead():{x:number,y:number} {\r\n        return {x:this.head.x, y:this.head.y};\r\n    }\r\n\r\n    isWorm(point:{x:number, y:number}) {\r\n         for(let i = 0; i < this.tail.length - 1; i++) {\r\n            const p1 = this.tail[i];\r\n            const p2 = this.tail[i+1];\r\n            if(point.x >= p1.x && point.x <= p2.x && point.y == p1.y && point.y == p2.y) {\r\n                return true;\r\n            }\r\n            if(point.y >= p1.y && point.y <= p2.y && point.x == p1.x && point.x == p2.x) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/worm.ts"],"sourceRoot":""}